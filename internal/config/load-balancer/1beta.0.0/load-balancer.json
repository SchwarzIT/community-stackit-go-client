{
  "components": {
    "schemas": {
      "ActiveHealthCheck": {
        "properties": {
          "healthyThreshold": {
            "description": "Healthy threshold of the health checking",
            "title": "Healthy threshold",
            "type": "integer"
          },
          "interval": {
            "description": "Interval duration of health checking in seconds",
            "example": "3s",
            "pattern": "^-?(?:0|[1-9][0-9]{0,11})(?:\\.[0-9]{1,9})?s$",
            "title": "Interval",
            "type": "string"
          },
          "intervalJitter": {
            "description": "Interval duration threshold of the health checking in seconds",
            "example": "3s",
            "pattern": "^-?(?:0|[1-9][0-9]{0,11})(?:\\.[0-9]{1,9})?s$",
            "title": "Interval threshold",
            "type": "string"
          },
          "timeout": {
            "description": "Active health checking timeout duration in seconds",
            "example": "3s",
            "pattern": "^-?(?:0|[1-9][0-9]{0,11})(?:\\.[0-9]{1,9})?s$",
            "title": "Timeout",
            "type": "string"
          },
          "unhealthyThreshold": {
            "description": "Unhealthy threshold of the health checking",
            "title": "Unhealthy threshold",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "DeleteLoadBalancerResponse": {
        "description": "Response for deleting a load balancer has an empty body if successful.",
        "type": "object"
      },
      "DisableResponse": {
        "description": "Response for disabling the load balancer has empty body if successful.",
        "type": "object"
      },
      "EnableResponse": {
        "description": "Response for enabling the load balancer has empty body if successful.",
        "type": "object"
      },
      "GetQuotaResponse": {
        "properties": {
          "maxLoadBalancers": {
            "description": "The maximum number of load balancing servers in this project. Unlimited if set to -1.",
            "maximum": 999,
            "minimum": -1,
            "title": "Load Balancer quota",
            "type": "integer"
          },
          "projectId": {
            "description": "Project identifier",
            "example": "2438ac3c-37eb-4902-adef-ed16b4431030",
            "format": "uuid",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "ListLoadBalancersResponse": {
        "properties": {
          "loadBalancers": {
            "items": {
              "$ref": "#/components/schemas/LoadBalancer"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "Listener": {
        "properties": {
          "displayName": {
            "type": "string"
          },
          "port": {
            "description": "Port number where we listen for traffic",
            "maximum": 65535,
            "minimum": 1,
            "type": "integer"
          },
          "protocol": {
            "description": "Protocol is the highest network protocol we understand to load balance. Currently only PROTOCOL_TCP and PROTOCOL_TCP_PROXY are supported.",
            "enum": [
              "PROTOCOL_TCP",
              "PROTOCOL_UDP",
              "PROTOCOL_TCP_PROXY"
            ],
            "type": "string"
          },
          "targetPool": {
            "description": "Reference target pool by target pool name.",
            "example": "my-target-pool",
            "type": "string"
          }
        },
        "type": "object"
      },
      "LoadBalancer": {
        "properties": {
          "errors": {
            "items": {
              "$ref": "#/components/schemas/LoadBalancerError"
            },
            "readOnly": true,
            "type": "array"
          },
          "externalAddress": {
            "description": "External load balancer IP address where this load balancer is exposed.",
            "example": "192.0.2.5",
            "type": "string"
          },
          "listeners": {
            "description": "List of all listeners which will accept traffic.",
            "items": {
              "$ref": "#/components/schemas/Listener"
            },
            "type": "array"
          },
          "name": {
            "description": "Load balancer name",
            "example": "my-load-balancer",
            "pattern": "^[0-9a-z](?:(?:[0-9a-z]|-){0,61}[0-9a-z])?$",
            "type": "string"
          },
          "networks": {
            "description": "List of networks that listeners and targets reside in. Currently limited to one.",
            "items": {
              "$ref": "#/components/schemas/Network"
            },
            "type": "array"
          },
          "options": {
            "$ref": "#/components/schemas/LoadBalancerOptions"
          },
          "privateAddress": {
            "description": "Transient private load balancer IP address that can change any time.",
            "example": "10.0.0.1",
            "readOnly": true,
            "type": "string"
          },
          "status": {
            "enum": [
              "STATUS_UNSPECIFIED",
              "STATUS_PENDING",
              "STATUS_READY",
              "STATUS_ERROR",
              "STATUS_TERMINATING"
            ],
            "readOnly": true,
            "type": "string"
          },
          "targetPools": {
            "description": "List of all target pools which will be used in the load balancer.",
            "items": {
              "$ref": "#/components/schemas/TargetPool"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "LoadBalancerError": {
        "properties": {
          "description": {
            "type": "string"
          },
          "type": {
            "enum": [
              "TYPE_UNSPECIFIED",
              "TYPE_INTERNAL",
              "TYPE_QUOTA_SECGROUP_EXCEEDED",
              "TYPE_QUOTA_SECGROUPRULE_EXCEEDED"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "LoadBalancerOptions": {
        "description": "Defines any optional functionality you want to have enabled on your load balancer.",
        "properties": {
          "accessControl": {
            "$ref": "#/components/schemas/LoadbalancerOptionAccessControl"
          },
          "privateNetworkOnly": {
            "description": "Load Balancer is accessable only via a private network ip address",
            "title": "Private Network Only",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "LoadbalancerOptionAccessControl": {
        "properties": {
          "allowedSourceRanges": {
            "description": "Load Balancer is accessable only from an IP address in this range",
            "items": {
              "type": "string"
            },
            "title": "Load Balancer source ranges",
            "type": "array"
          }
        },
        "type": "object"
      },
      "Network": {
        "properties": {
          "networkId": {
            "description": "Openstack network ID",
            "example": "2028e5d4-af4f-45e2-98df-502be37a4317",
            "format": "uuid",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
            "type": "string"
          },
          "role": {
            "description": "The role defines how the load balancer is using the network. Currently only ROLE_LISTENERS_AND_TARGETS is supported.",
            "enum": [
              "ROLE_LISTENERS_AND_TARGETS"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "PingResponse": {
        "description": "Response to ping with projectId.",
        "properties": {
          "projectId": {
            "description": "Same project identifier as passed in on request.",
            "example": "2438ac3c-37eb-4902-adef-ed16b4431030",
            "format": "uuid",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
            "type": "string"
          }
        },
        "type": "object"
      },
      "StatusResponse": {
        "description": "Response with customer project status.",
        "properties": {
          "status": {
            "description": "status of the project",
            "enum": [
              "STATUS_UNSPECIFIED",
              "STATUS_READY",
              "STATUS_FAILED",
              "STATUS_UPDATING",
              "STATUS_DELETING",
              "STATUS_DISABLED"
            ],
            "type": "string"
          }
        },
        "type": "object"
      },
      "Target": {
        "properties": {
          "displayName": {
            "description": "Target name",
            "example": "my-target",
            "pattern": "^[0-9a-z](?:(?:[0-9a-z]|-){0,61}[0-9a-z])?$",
            "type": "string"
          },
          "ip": {
            "description": "Target IP",
            "example": "192.0.2.5",
            "type": "string"
          }
        },
        "type": "object"
      },
      "TargetPool": {
        "properties": {
          "activeHealthCheck": {
            "$ref": "#/components/schemas/ActiveHealthCheck"
          },
          "name": {
            "description": "Target pool name",
            "example": "my-target-pool",
            "pattern": "^[0-9a-z](?:(?:[0-9a-z]|-){0,18}[0-9a-z])?$",
            "type": "string"
          },
          "targetPort": {
            "description": "Identical port number where each target listens for traffic.",
            "maximum": 65535,
            "minimum": 1,
            "type": "integer"
          },
          "targets": {
            "items": {
              "$ref": "#/components/schemas/Target"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "UpdateQuotaRequest": {
        "properties": {
          "maxLoadBalancers": {
            "description": "The maximum number of load balancing servers in this project. Unlimited if set to -1.",
            "maximum": 999,
            "minimum": -1,
            "title": "Load Balancer quota",
            "type": "integer"
          },
          "projectId": {
            "description": "Project identifier",
            "example": "2438ac3c-37eb-4902-adef-ed16b4431030",
            "format": "uuid",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      },
      "UpdateQuotaResponse": {
        "properties": {
          "maxLoadBalancers": {
            "description": "The maximum number of load balancing servers in this project. Unlimited if set to -1.",
            "maximum": 999,
            "minimum": -1,
            "title": "Load Balancer quota",
            "type": "integer"
          },
          "projectId": {
            "description": "Project identifier",
            "example": "2438ac3c-37eb-4902-adef-ed16b4431030",
            "format": "uuid",
            "pattern": "^[0-9a-f]{8}-[0-9a-f]{4}-4[0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$",
            "readOnly": true,
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "bearerFormat": "JWT",
        "description": "A valid bearer JWT token. NOTE: Make sure you DON'T prefix the token with Bearer!",
        "scheme": "bearer",
        "type": "http"
      }
    }
  },
  "info": {
    "description": "This API offers an interface to provision and manage load balancing servers in your STACKIT project. It also has the possibility of pooling target servers for load balancing purposes.\n\nThis beta load balancer service is provided free of charge. For each load balancer provided, two VMs are deployed in your OpenStack project subject to a fee.",
    "title": "Load Balancer API",
    "version": "1beta.0.0"
  },
  "openapi": "3.0.3",
  "paths": {
    "/v1beta/projects/{projectId}": {
      "delete": {
        "description": "Disable will disable the load balancer functionality for the project specified.",
        "operationId": "APIService_Disable",
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DisableResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "One or more fields are invalid."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "this projectId is not allowed to try this API"
          },
          "500": {
            "description": "internal error - please retry again later or contact support if the issue persists"
          }
        },
        "summary": "Disables the functionality of load balancers for the project specified.",
        "tags": [
          "APIService",
          "Project"
        ],
        "x-viewer-permissions": {
          "actions": [
            "project.resources.edit"
          ]
        }
      },
      "get": {
        "description": "Status will return the load balancer functionality status for the project specified.",
        "operationId": "APIService_Status",
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "One or more fields are invalid."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "this project_id is not allowed to try this API"
          },
          "500": {
            "description": "internal error - please retry again later or contact support if the issue persists"
          }
        },
        "summary": "Return the status of load balancer functionality for the project specified.",
        "tags": [
          "APIService",
          "Project"
        ],
        "x-viewer-permissions": {
          "actions": [
            "project.read",
            "system.services.read"
          ]
        }
      },
      "post": {
        "description": "Enable will enable the load balancer functionality for the project specified.",
        "operationId": "APIService_Enable",
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "example": "2438ac3c-37eb-4902-adef-ed16b4431030",
            "in": "header",
            "name": "X-Request-ID",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnableResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "One or more fields are invalid."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "this project_id is not allowed to try this API"
          },
          "500": {
            "description": "internal error - please retry again later or contact support if the issue persists"
          }
        },
        "summary": "Enables the functionality of load balancers for the project specified.",
        "tags": [
          "APIService",
          "Project"
        ],
        "x-viewer-permissions": {
          "actions": [
            "project.resources.edit"
          ]
        }
      }
    },
    "/v1beta/projects/{projectId}/load-balancers": {
      "get": {
        "description": "ListLoadBalancer will list load balancers of a project.",
        "operationId": "APIService_ListLoadBalancers",
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListLoadBalancersResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "One or more fields are invalid."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "this project_id is not allowed to try this API"
          },
          "500": {
            "description": "internal error - please retry again later or contact support if the issue persists"
          }
        },
        "summary": "List load balancers in a project.",
        "tags": [
          "APIService",
          "Instances"
        ],
        "x-viewer-permissions": {
          "actions": [
            "project.read"
          ]
        }
      },
      "post": {
        "description": "Create Load Balancer will create a load balancer.",
        "operationId": "APIService_CreateInstances",
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "example": "2438ac3c-37eb-4902-adef-ed16b4431030",
            "in": "header",
            "name": "X-Request-ID",
            "required": true,
            "schema": {
              "format": "uuid",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoadBalancer"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoadBalancer"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "One or more fields are invalid."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "this project_id is not allowed to try this API"
          },
          "409": {
            "description": "load balancer already exists"
          },
          "500": {
            "description": "internal error - please retry again later or contact support if the issue persists"
          }
        },
        "summary": "Create a load balancer in a project.",
        "tags": [
          "APIService",
          "Instances"
        ],
        "x-viewer-permissions": {
          "actions": [
            "project.resources.edit"
          ]
        }
      }
    },
    "/v1beta/projects/{projectId}/load-balancers/{name}": {
      "delete": {
        "description": "DeleteLoadBalancer will delete a given load balancer.",
        "operationId": "APIService_DeleteLoadBalancer",
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteLoadBalancerResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "One or more fields are invalid."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "this project_id is not allowed to try this API"
          },
          "500": {
            "description": "internal error - please retry again later or contact support if the issue persists"
          }
        },
        "summary": "Delete a given load balancer in a project.",
        "tags": [
          "APIService",
          "Instances"
        ],
        "x-viewer-permissions": {
          "actions": [
            "project.resources.edit"
          ]
        }
      },
      "get": {
        "description": "Get Load Balancer will get a single load balancer of a project.",
        "operationId": "APIService_GetLoadBalancer",
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoadBalancer"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "One or more fields are invalid."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "this project_id is not allowed to try this API"
          },
          "404": {
            "description": "load balancer not found"
          },
          "500": {
            "description": "internal error - please retry again later or contact support if the issue persists"
          }
        },
        "summary": "Get a single load balancer in a project.",
        "tags": [
          "APIService",
          "Instances"
        ],
        "x-viewer-permissions": {
          "actions": [
            "project.read"
          ]
        }
      }
    },
    "/v1beta/projects/{projectId}/load-balancers/{name}/target-pools/{targetPoolName}": {
      "put": {
        "description": "ReplaceTargetPool will replace a specific target pool of a load balancer with new content.\n Useful to  add/remove target servers. will update a load balancer.",
        "operationId": "APIService_ReplaceTargetPool",
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "targetPoolName",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TargetPool"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TargetPool"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "One or more fields are invalid."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "this project_id is not allowed to try this API"
          },
          "500": {
            "description": "internal error - please retry again later or contact support if the issue persists"
          }
        },
        "summary": "Update a single target pool of a load balancer in a project.",
        "tags": [
          "APIService",
          "Instances"
        ],
        "x-viewer-permissions": {
          "actions": [
            "project.resources.edit"
          ]
        }
      }
    },
    "/v1beta/projects/{projectId}/ping": {
      "get": {
        "description": "Ping will echo the project_id from the request into the response.",
        "operationId": "APIService_Ping",
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PingResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "One or more fields are invalid."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "this project_id is not allowed to try this API"
          },
          "500": {
            "description": "internal error - please retry again later or contact support if the issue persists"
          }
        },
        "summary": "Ping the API with a projectId it will return.",
        "tags": [
          "APIService"
        ],
        "x-viewer-permissions": {
          "actions": [
            "project.read"
          ]
        }
      }
    },
    "/v1beta/projects/{projectId}/quota": {
      "get": {
        "description": "GetQuota get the limits on LBs and EGs",
        "operationId": "APIService_GetQuota",
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetQuotaResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "One or more fields are invalid."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "this projectId is not allowed to try this API"
          },
          "500": {
            "description": "internal error - please retry again later or contact support if the issue persists"
          }
        },
        "summary": "Get the quota of Load Balancers and Target Pools in a project.",
        "tags": [
          "APIService"
        ],
        "x-viewer-permissions": {
          "actions": [
            "system.quota.read"
          ]
        }
      },
      "put": {
        "description": "UpdateQuota is able to change the limits on LBs and EGS",
        "operationId": "APIService_UpdateQuota",
        "parameters": [
          {
            "in": "path",
            "name": "projectId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateQuotaRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateQuotaResponse"
                }
              }
            },
            "description": "OK"
          },
          "400": {
            "description": "One or more fields are invalid."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "this project_id is not allowed to try this API"
          },
          "500": {
            "description": "internal error - please retry again later or contact support if the issue persists"
          }
        },
        "summary": "Update quota on Load Balancers and Target Pools in a project.",
        "tags": [
          "APIService"
        ],
        "x-viewer-permissions": {
          "actions": [
            "system.quota.edit"
          ]
        }
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "servers": [
    {
      "description": "This API offers an interface to provision and manage load balancing servers in y",
      "url": "https://load-balancer.api.eu01.stackit.cloud"
    }
  ],
  "tags": [
    {
      "description": "All endpoints in the Load Balancer API",
      "name": "APIService"
    },
    {
      "description": "Only API calls to provision and manage load balancing servers",
      "name": "Load Balancer"
    },
    {
      "description": "Only API calls for enable/disable load balancing in the project.",
      "name": "Project"
    }
  ]
}