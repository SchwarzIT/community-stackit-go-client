{
  "openapi": "3.0.1",
  "info": {
    "title": "STACKIT Postgres Service API",
    "description": "This is the documentation for the STACKIT postgres service\n\n# Authentication\n\n<!-- ReDoc-Inject: <security-definitions> -->",
    "termsOfService": "https://www.stackit.de/en/general-terms-and-conditions/",
    "contact": {
      "name": "STACKIT Postgres Service Support",
      "url": "https://www.stackit.de/en/contact",
      "email": "support@stackit.cloud"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api-dev.stackit.cloud/postgres/"
    }
  ],
  "paths": {
    "/v1/projects/{projectId}/flavors": {
      "get": {
        "tags": [
          "flavors"
        ],
        "summary": "Get Flavors",
        "description": "Get available flavors for a specific projectID",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.GetFlavorsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "x-stackit-authorization": {
          "actions": [
            "project.resources.edit"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project"
        },
        "x-stackit-signer": {
          "audience": [
            "postgres-flex-service"
          ]
        }
      }
    },
    "/v1/projects/{projectId}/instances": {
      "get": {
        "tags": [
          "instance"
        ],
        "summary": "List Instances",
        "description": "List available instances",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.ListInstanceResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "x-stackit-authorization": {
          "actions": [
            "project.resources.edit"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project"
        },
        "x-stackit-signer": {
          "audience": [
            "postgres-flex-service"
          ]
        }
      },
      "post": {
        "tags": [
          "instance"
        ],
        "summary": "Create Instance",
        "description": "Create a new instance of a postgres database",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/instance.CreateInstanceRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.CreateInstanceResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "x-stackit-authorization": {
          "actions": [
            "project.resources.edit"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project"
        },
        "x-stackit-signer": {
          "audience": [
            "postgres-flex-service"
          ]
        },
        "x-codegen-request-body-name": "request"
      }
    },
    "/v1/projects/{projectId}/instances/{instanceId}": {
      "get": {
        "tags": [
          "instance"
        ],
        "summary": "Get specific instance",
        "description": "Get specific available instances",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "instanceId",
            "in": "path",
            "description": "Instance ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.GetInstanceResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "x-stackit-authorization": {
          "actions": [
            "project.resources.edit"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project"
        },
        "x-stackit-signer": {
          "audience": [
            "postgres-flex-service"
          ]
        }
      },
      "put": {
        "tags": [
          "instance"
        ],
        "summary": "Update Instance",
        "description": "Update available instance of a postgres database",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "instanceId",
            "in": "path",
            "description": "Instance ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/instance.UpdateInstanceRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.UpdateInstanceResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "x-stackit-authorization": {
          "actions": [
            "project.resources.edit"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project"
        },
        "x-stackit-signer": {
          "audience": [
            "postgres-flex-service"
          ]
        },
        "x-codegen-request-body-name": "request"
      },
      "delete": {
        "tags": [
          "instance"
        ],
        "summary": "Delete Instance",
        "description": "Delete available instance",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "instanceId",
            "in": "path",
            "description": "Instance ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {}
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "x-stackit-authorization": {
          "actions": [
            "project.resources.edit"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project"
        },
        "x-stackit-signer": {
          "audience": [
            "postgres-flex-service"
          ]
        }
      },
      "patch": {
        "tags": [
          "instance"
        ],
        "summary": "Update Instance",
        "description": "Update available instance of a postgres database",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "instanceId",
            "in": "path",
            "description": "Instance ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/instance.UpdateInstanceRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.UpdateInstanceResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "x-stackit-authorization": {
          "actions": [
            "project.resources.edit"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project"
        },
        "x-stackit-signer": {
          "audience": [
            "postgres-flex-service"
          ]
        },
        "x-codegen-request-body-name": "request"
      }
    },
    "/v1/projects/{projectId}/instances/{instanceId}/backups": {
      "get": {
        "tags": [
          "backups"
        ],
        "summary": "List backups",
        "description": "List all backups which are available for a specific instance",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "instanceId",
            "in": "path",
            "description": "Instance ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.ListBackupResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "x-stackit-authorization": {
          "actions": [
            "project.resources.edit"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project"
        },
        "x-stackit-signer": {
          "audience": [
            "postgres-flex-service"
          ]
        }
      },
      "put": {
        "tags": [
          "backups"
        ],
        "summary": "Update Backup Schedule",
        "description": "Update backup schedule",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "instanceId",
            "in": "path",
            "description": "Instance ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/instance.UpdateBackupScheduleRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {}
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "x-stackit-authorization": {
          "actions": [
            "project.resources.edit"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project"
        },
        "x-stackit-signer": {
          "audience": [
            "postgres-flex-service"
          ]
        },
        "x-codegen-request-body-name": "request"
      }
    },
    "/v1/projects/{projectId}/instances/{instanceId}/backups/{backupId}": {
      "get": {
        "tags": [
          "backups"
        ],
        "summary": "Get specific backup",
        "description": "Get specific available backup",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "instanceId",
            "in": "path",
            "description": "Instance ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "backupId",
            "in": "path",
            "description": "Backup ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.GetBackupResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "x-stackit-authorization": {
          "actions": [
            "project.resources.edit"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project"
        },
        "x-stackit-signer": {
          "audience": [
            "postgres-flex-service"
          ]
        }
      }
    },
    "/v1/projects/{projectId}/instances/{instanceId}/users": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "List Users",
        "description": "List available users for an instance",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "instanceId",
            "in": "path",
            "description": "Instance ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.ListUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "x-stackit-authorization": {
          "actions": [
            "project.resources.edit"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project"
        },
        "x-stackit-signer": {
          "audience": [
            "postgres-flex-service"
          ]
        }
      },
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Create User",
        "description": "Create user for an instance",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "instanceId",
            "in": "path",
            "description": "Instance ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/instance.CreateUserRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.CreateUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "x-stackit-authorization": {
          "actions": [
            "project.resources.edit"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project"
        },
        "x-stackit-signer": {
          "audience": [
            "postgres-flex-service"
          ]
        },
        "x-codegen-request-body-name": "request"
      }
    },
    "/v1/projects/{projectId}/instances/{instanceId}/users/{userId}": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get User",
        "description": "Get specific available user for an instance",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "instanceId",
            "in": "path",
            "description": "Instance ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.GetUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "x-stackit-authorization": {
          "actions": [
            "project.resources.edit"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project"
        },
        "x-stackit-signer": {
          "audience": [
            "postgres-flex-service"
          ]
        }
      }
    },
    "/v1/projects/{projectId}/storages/{flavorId}": {
      "get": {
        "tags": [
          "storage"
        ],
        "summary": "Get Storages",
        "description": "Get available storages for a specific flavor",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "flavorId",
            "in": "path",
            "description": "Flavor ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.GetFlavorStorageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "x-stackit-authorization": {
          "actions": [
            "project.resources.edit"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project"
        },
        "x-stackit-signer": {
          "audience": [
            "postgres-flex-service"
          ]
        }
      }
    },
    "/v1/projects/{projectId}/versions": {
      "get": {
        "tags": [
          "versions"
        ],
        "summary": "Get Versions",
        "description": "Get available versions for postgres database",
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "description": "Project ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "instanceId",
            "in": "query",
            "description": "Instance ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.GetVersionsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/instance.Error"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "content": {}
          },
          "500": {
            "description": "Internal Server Error",
            "content": {}
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "x-stackit-authorization": {
          "actions": [
            "project.resources.edit"
          ],
          "resource-id": "projectId",
          "resource-id-type": "dynamic",
          "resource-type": "project"
        },
        "x-stackit-signer": {
          "audience": [
            "postgres-flex-service"
          ]
        }
      }
    }
  },
  "components": {
    "schemas": {
      "instance.Acl": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "description": "TODO validating in api (middleware)",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "instance.Backup": {
        "type": "object",
        "properties": {
          "endTime": {
            "type": "string"
          },
          "error": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "labels": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "name": {
            "type": "string"
          },
          "options": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "startTime": {
            "type": "string"
          }
        }
      },
      "instance.CreateInstanceRequest": {
        "type": "object",
        "properties": {
          "acl": {
            "$ref": "#/components/schemas/instance.Acl"
          },
          "backupSchedule": {
            "type": "string"
          },
          "flavorId": {
            "type": "string"
          },
          "labels": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Following fields are not certain/clear"
          },
          "name": {
            "type": "string"
          },
          "options": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "replicas": {
            "type": "integer"
          },
          "storage": {
            "$ref": "#/components/schemas/instance.Storage"
          },
          "version": {
            "type": "string"
          }
        }
      },
      "instance.CreateInstanceResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        }
      },
      "instance.CreateUserRequest": {
        "type": "object",
        "properties": {
          "database": {
            "type": "string"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "username": {
            "type": "string"
          }
        }
      },
      "instance.CreateUserResponse": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/instance.User"
          }
        }
      },
      "instance.Error": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer"
          },
          "fields": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "message": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "instance.Flavor": {
        "type": "object",
        "properties": {
          "cpu": {
            "type": "integer"
          },
          "description": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "memory": {
            "type": "integer"
          }
        }
      },
      "instance.GetBackupResponse": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/instance.Backup"
          }
        }
      },
      "instance.GetFlavorStorageResponse": {
        "type": "object",
        "properties": {
          "storageClasses": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "storageRange": {
            "$ref": "#/components/schemas/instance.StorageRange"
          }
        }
      },
      "instance.GetFlavorsResponse": {
        "type": "object",
        "properties": {
          "flavors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/instance.Flavor"
            }
          }
        }
      },
      "instance.GetInstanceResponse": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/instance.SingleInstance"
          }
        }
      },
      "instance.GetUserResponse": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/instance.ResponseUser"
          }
        }
      },
      "instance.GetVersionsResponse": {
        "type": "object",
        "properties": {
          "versions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "instance.ListBackupResponse": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/instance.Backup"
            }
          }
        }
      },
      "instance.ListInstance": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "instance.ListInstanceResponse": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "TODO pagination ?"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/instance.ListInstance"
            }
          }
        }
      },
      "instance.ListUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "username": {
            "type": "string"
          }
        }
      },
      "instance.ListUserResponse": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/instance.ListUser"
            }
          }
        }
      },
      "instance.ResponseUser": {
        "type": "object",
        "properties": {
          "database": {
            "type": "string"
          },
          "host": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "port": {
            "type": "integer"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "username": {
            "type": "string"
          }
        }
      },
      "instance.SingleInstance": {
        "type": "object",
        "properties": {
          "acl": {
            "$ref": "#/components/schemas/instance.Acl"
          },
          "backupSchedule": {
            "type": "string"
          },
          "flavor": {
            "$ref": "#/components/schemas/instance.Flavor"
          },
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "options": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "replicas": {
            "type": "integer"
          },
          "status": {
            "type": "string"
          },
          "storage": {
            "$ref": "#/components/schemas/instance.Storage"
          },
          "version": {
            "type": "string"
          }
        }
      },
      "instance.Storage": {
        "type": "object",
        "properties": {
          "class": {
            "type": "string"
          },
          "size": {
            "type": "integer"
          }
        }
      },
      "instance.StorageRange": {
        "type": "object",
        "properties": {
          "max": {
            "type": "integer"
          },
          "min": {
            "type": "integer"
          }
        }
      },
      "instance.UpdateBackupScheduleRequest": {
        "type": "object",
        "properties": {
          "backupSchedule": {
            "type": "string"
          }
        }
      },
      "instance.UpdateInstanceRequest": {
        "type": "object",
        "properties": {
          "acl": {
            "$ref": "#/components/schemas/instance.Acl"
          },
          "backupSchedule": {
            "type": "string"
          },
          "flavorId": {
            "type": "string"
          },
          "labels": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Following fields are not certain/clear"
          },
          "name": {
            "type": "string"
          },
          "options": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          },
          "replicas": {
            "type": "integer"
          },
          "storage": {
            "$ref": "#/components/schemas/instance.Storage"
          },
          "version": {
            "type": "string"
          }
        }
      },
      "instance.UpdateInstanceResponse": {
        "type": "object",
        "properties": {
          "item": {
            "$ref": "#/components/schemas/instance.SingleInstance"
          }
        }
      },
      "instance.User": {
        "type": "object",
        "properties": {
          "database": {
            "type": "string"
          },
          "host": {
            "type": "string"
          },
          "id": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "port": {
            "type": "integer"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "uri": {
            "type": "string"
          },
          "username": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "x-stackit-api": {
    "type": "stackit"
  },
  "x-stackit-scope": {
    "visibility": "private"
  }
}