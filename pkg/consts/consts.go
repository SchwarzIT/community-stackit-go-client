package consts

// constants used across client services
const (
	DEFAULT_AUTH_BASE_URL = "https://auth.01.idp.eu01.stackit.cloud/"
	DEFAULT_BASE_URL      = "https://api.stackit.cloud/"

	// schwarz specific constants
	SCHWARZ_ORGANIZATION_ID = "07a1ed91-2efb-42c2-9d00-e84ae71bce0d"
	SCHWARZ_AUTH_ORIGIN     = "schwarz-federation"

	// resource types
	RESOURCE_TYPE_PROJECT = "project"
	RESOURCE_TYPE_ORG     = "organization"

	// Member Roles
	ROLE_PROJECT_OWNER   = "project.owner"
	ROLE_PROJECT_MEMBER  = "project.member"
	ROLE_PROJECT_ADMIN   = "project.admin"
	ROLE_PROJECT_AUDITOR = "project.auditor"

	// Project scopes
	PROJECT_SCOPE_PUBLIC  = "PUBLIC"
	PROJECT_SCOPE_PRIVATE = "PRIVATE"

	// Project lifecycle statuses
	PROJECT_STATUS_ACTIVE        = "ACTIVE"
	PROJECT_STATUS_CREATING      = "CREATING"
	PROJECT_STATUS_DELETING      = "DELETING"
	PROJECT_STATUS_NOT_SPECIFIED = "NOT_SPECIFIED"

	// SKE
	SKE_CLUSTERS_TAINT_EFFECT_NO_SCHED      = "NoSchedule"
	SKE_CLUSTERS_TAINT_EFFECT_PREF_NO_SCHED = "PreferNoSchedule"
	SKE_CLUSTERS_TAINT_EFFECT_NO_EXEC       = "NoExecute"

	SKE_CLUSTERS_CRI_DOCKER     = "docker"
	SKE_CLUSTERS_CRI_CONTAINERD = "containerd"

	SKE_PROJECT_STATUS_UNSPECIFIED = "STATE_UNSPECIFIED"
	SKE_PROJECT_STATUS_CREATING    = "STATE_CREATING"
	SKE_PROJECT_STATUS_CREATED     = "STATE_CREATED"
	SKE_PROJECT_STATUS_DELETING    = "STATE_DELETING"
	SKE_PROJECT_STATUS_FAILED      = "STATE_FAILED"

	SKE_CLUSTER_STATUS_CREATING    = "STATE_CREATING"
	SKE_CLUSTER_STATUS_DELETING    = "STATE_DELETING"
	SKE_CLUSTER_STATUS_HEALTHY     = "STATE_HEALTHY"
	SKE_CLUSTER_STATUS_HIBERNATED  = "STATE_HIBERNATED"
	SKE_CLUSTER_STATUS_HIBERNATING = "STATE_HIBERNATING"
	SKE_CLUSTER_STATUS_RECONCILING = "STATE_RECONCILING"
	SKE_CLUSTER_STATUS_UNHEALTHY   = "STATE_UNHEALTHY"
	SKE_CLUSTER_STATUS_UNSPECIFIED = "STATE_UNSPECIFIED"
	SKE_CLUSTER_STATUS_WAKINGUP    = "STATE_WAKINGUP"

	SKE_VERSION_STATE_DEPRECATED = "deprecated"
	SKE_VERSION_STATE_SUPPORTED  = "supported"

	// granularity options; to be used for costs.GetProjectCosts()
	COSTS_GRANULARITY_NONE    = "none"
	COSTS_GRANULARITY_DAILY   = "daily"
	COSTS_GRANULARITY_WEEKLY  = "weekly"
	COSTS_GRANULARITY_MONTHLY = "monthly"
	COSTS_GRANULARITY_YEARLY  = "yearly"

	// depth options; to be used for costs.GetProjectCosts()
	COSTS_DEPTH_PROJECT = "project"
	COSTS_DEPTH_SERVICE = "service"
	COSTS_DEPTH_AUTO    = "auto"

	// Argus
	ARGUS_INSTANCE_STATUS_CREATING         = "CREATING"
	ARGUS_INSTANCE_STATUS_CREATE_SUCCEEDED = "CREATE_SUCCEEDED"
	ARGUS_INSTANCE_STATUS_CREATE_FAILED    = "CREATE_FAILED"
	ARGUS_INSTANCE_STATUS_DELETING         = "DELETING"
	ARGUS_INSTANCE_STATUS_DELETE_SUCCEEDED = "DELETE_SUCCEEDED"
	ARGUS_INSTANCE_STATUS_DELETE_FAILED    = "DELETE_FAILED"
	ARGUS_INSTANCE_STATUS_UPDATING         = "UPDATING"
	ARGUS_INSTANCE_STATUS_UPDATE_SUCCEEDED = "UPDATE_SUCCEEDED"
	ARGUS_INSTANCE_STATUS_UPDATE_FAILED    = "UPDATE_FAILED"

	// MongoDB Flex
	MONGO_DB_STATUS_READY      = "READY"
	MONGO_DB_STATUS_FAILED     = "FAILED"
	MONGO_DB_STATUS_PROCESSING = "PROCESSING"
	MONGO_DB_STATUS_UNKNOWN    = "UNKNOWN"

	// Postgres Flex
	POSTGRES_STATUS_READY      = "READY"
	POSTGRES_STATUS_FAILED     = "FAILED"
	POSTGRES_STATUS_PROCESSING = "PROCESSING"
	POSTGRES_STATUS_UNKNOWN    = "UNKNOWN"
)
